
#establece la estrategia que utilizaran JPA y Spring para el manejo de tablas. Update = actualizacion
spring.jpa.hibernate.ddl-auto=update
#Direcc donde se encuentra alojada la BD
#spring.datasource.url=jdbc:mysql://localhost:3306/checklist?useSSL=false&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://root:13Hc2B5A1D-5G1Dd5Acd2GF1eBFEDH3-@viaduct.proxy.rlwy.net:51546/railway
spring.datsource.username=root
spring.datasource.password=13Hc2B5A1D-5G1Dd5Acd2GF1eBFEDH3-

#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.username=utcapd57wrhckzhj
#spring.datasource.password=WfHmcsCEGchUgLBVL2jt
#spring.datasource.url=jdbc:mysql://buxwpxb3qsxe3s4svwxn-mysql.services.clever-cloud.com/buxwpxb3qsxe3s4svwxn
#Se especifica el dialecto que se utilizara para comunicar la app con la BD MySQL creada
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# enable api-docs swagger-ui
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# define swagger-ui path
springdoc.swagger-ui.path=/swagger-ui.html
# define api-docs path
springdoc.api-docs.path=/v3/api-docs
# define package and class to scan
# springdoc.packagesToScan=com.example.demo
springdoc.pathsToMatch=/api/**, /support/**, /shoplist/**, /brand/**, /category/**, /user/**, /note/**, /product/**
```







